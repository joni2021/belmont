<?php

namespace App\Http\Controllers;

use App\Entities\AccreditationType;
use App\Entities\Client;
use App\Entities\DniType;
use App\Entities\Financing;
use App\Http\Repositories\ClientsRepo;
use App\Http\Repositories\LoansRepo;
use Illuminate\Http\Request;
use Illuminate\Routing\Route;

class FormsController extends Controller
{

    protected $repo;
    protected $module;
    protected $route;
    protected $clientsRepo;
    protected $estado;

    public function __construct( Route $route, Request $request, ClientsRepo $clientsRepo, LoansRepo $loansRepo)
    {
        $this->route = $route;
        $confFile = 'forms';

        $this->clientsRepo = $clientsRepo;
        $this->repo = $loansRepo;

        // nombre de archivo de configuracion
        $this->confFile = $confFile;
        $this->data['confFile'] = $confFile;

        $this->request = $request;
        $this->route = $route;
        $this->route = $route;

        $this->data['status'] = $this->route->parameter('status') === "1" ? "1" : "0";
        $this->data["estado"] = $this->route->parameter('status') === "1" ? "Otorgados" : "Pendientes";
    }

    public function index()
    {
        $this->data['models'] = $this->repo->getAllByStatus($this->data['status']);

        return view(config($this->confFile.".viewIndex"))->with($this->data);
    }


    public function create()
    {
        $this->data['clients'] = $this->clientsRepo->getClientList();
        $this->data['provinces'] = ["Capital Federal","Buenos Aires","Catamarca","Chaco","Chubut","Córdoba","Corrientes","Entre Ríos","Formosa","Jujuy","La Pampa","La Rioja","Mendoza","Misiones","Neuquén","Río Negro","Salta","San Juan","San Luis","Santa Cruz","Santa Fe","Santiago Del Estero","Tierra Del Fuego","Tucuman"];
        $this->data['dniTypes'] = DniType::all()->pluck('type','id');
        $this->data['accreditationsType'] = AccreditationType::all()->pluck('type','id');
        $this->data['financing'] = Financing::all();

        return parent::create(); // TODO: Change the autogenerated stub
    }

    public function store(Request $request)
    {
        //validacion del formulario
        $request->validate(config($this->confFile.'.validationsStore'),config($this->confFile.'.messagesStore'));

        // busco al cliente
        $cliente = Client::find($this->request->searchClient);

        if(!$cliente)
            return redirect()->back()->withErrors()->withInput();

        // Actualizar los datos del cliente
        $datosCliente = $this->request->only(['cbu','name','last_name','dni_type_id','dni','address','city','province','cp','phone','cel','job_name','job_address','job_city','job_province','job_phone']);

        $cliente->update($datosCliente);


        // Guardar los datos del presupuesto
        $datosPrestamo = $this->request->only(['amount','financing_id','cbu','cft','tem','accreditation_type_id']);

        $dues = Financing::find($datosPrestamo['financing_id']);

        if(!$dues)
            return redirect()->back()->withInput()->withErrors("La cantidad de cuotas ingresado no es correcta");

        $datosPrestamo['client_id'] = $cliente->id;

        $datosPrestamo['dues'] = $dues->due;


        // Pongo el estado en PENDIENTE
        $datosPrestamo['status'] = 0;

        $this->repo->create($datosPrestamo);


        return redirect()->route(config($this->confFile.".viewIndex"),$datosPrestamo["status"])->with('ok','Registro Creado.');

    }


    public function edit()
    {
        $this->data['clients'] = $this->clientsRepo->getClientList();
        $this->data['provinces'] = ["Capital Federal","Buenos Aires","Catamarca","Chaco","Chubut","Córdoba","Corrientes","Entre Ríos","Formosa","Jujuy","La Pampa","La Rioja","Mendoza","Misiones","Neuquén","Río Negro","Salta","San Juan","San Luis","Santa Cruz","Santa Fe","Santiago Del Estero","Tierra Del Fuego","Tucuman"];
        $this->data['dniTypes'] = DniType::all()->pluck('type','id');
        $this->data['accreditationsType'] = AccreditationType::all()->pluck('type','id');
        $this->data['financing'] = Financing::all();

        return parent::edit(); // TODO: Change the autogenerated stub
    }

    public function update(Request $request)
    {
        return parent::update($request); // TODO: Change the autogenerated stub
    }


}
